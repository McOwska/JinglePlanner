@model JinglePlanner.Models.Party

@{
    ViewData["Title"] = Model.Name;
}

<h1>@Model.Name</h1>
<hr />
<div>
       
    <dl class="row">
        
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Description)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Description)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.DateFrom)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.DateFrom)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.DateTo)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.DateTo)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Location)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Location)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Owner)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Owner)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.NumberOfGuests)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.NumberOfGuests)
        </dd>

    </dl>
</div>
<div>
   <a href="@Url.Action("Index", "Guests", new { PartyName = Model?.Name })">Guests</a> |
    @* <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a> | *@
    <a asp-action="Index">Back to List</a>
</div>
